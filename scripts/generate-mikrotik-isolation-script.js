#!/usr/bin/env node

/**
 * Script Generator untuk Mikrotik Isolation System
 * Menghasilkan script Mikrotik untuk isolir pelanggan IP statik
 * 
 * Usage: node scripts/generate-mikrotik-isolation-script.js
 */

const fs = require('fs');
const path = require('path');
const { getSetting } = require('../config/settingsManager');

class MikrotikIsolationScriptGenerator {
    constructor() {
        this.scriptContent = [];
        this.addHeader();
    }

    addHeader() {
        this.scriptContent.push(
            '# ========================================',
            '# MIKROTIK ISOLATION SYSTEM SCRIPT',
            '# Generated by Gembok Bill System',
            '# Date: ' + new Date().toISOString(),
            '# ========================================',
            '',
            '# Script ini berisi konfigurasi untuk isolir pelanggan IP statik',
            '# Jalankan script ini di Mikrotik RouterOS',
            '',
            '# ========================================',
            '# 1. SETUP ADDRESS LIST',
            '# ========================================',
            ''
        );
    }

    generateAddressListSetup() {
        this.scriptContent.push(
            '# Buat address list untuk blocked customers',
            '/ip firewall address-list add list=blocked_customers address=0.0.0.0 comment="Placeholder - Auto managed by Gembok Bill"',
            '',
            '# ========================================',
            '# 2. FIREWALL RULES',
            '# ========================================',
            ''
        );
    }

    generateFirewallRules() {
        this.scriptContent.push(
            '# Rule 1: Block traffic dari blocked customers (FORWARD chain)',
            '# Place this rule at the TOP of your forward chain',
            '/ip firewall filter add chain=forward src-address-list=blocked_customers action=drop comment="Block suspended customers (static IP) - Gembok Bill" place-before=0',
            '',
            '# Rule 2: Block access to router dari blocked customers (INPUT chain)',
            '/ip firewall filter add chain=input src-address-list=blocked_customers action=drop comment="Block suspended customers from accessing router (static IP) - Gembok Bill"',
            '',
            '# ========================================',
            '# 3. DHCP SERVER CONFIGURATION (Optional)',
            '# ========================================',
            ''
        );
    }

    generateDHCPConfiguration() {
        this.scriptContent.push(
            '# Jika menggunakan DHCP block method, pastikan DHCP server aktif',
            '# Uncomment dan sesuaikan dengan konfigurasi DHCP Anda:',
            '',
            '# /ip dhcp-server setup',
            '# /ip dhcp-server network add address=192.168.1.0/24 gateway=192.168.1.1 dns=8.8.8.8,8.8.4.4',
            '',
            '# ========================================',
            '# 4. QUEUE CONFIGURATION (Optional)',
            '# ========================================',
            ''
        );
    }

    generateQueueConfiguration() {
        this.scriptContent.push(
            '# Jika menggunakan bandwidth limit method, buat queue parent:',
            '# /queue simple add name="suspended_customers" target=192.168.1.0/24 max-limit=1k/1k comment="Suspended customers queue"',
            '',
            '# ========================================',
            '# 5. MONITORING COMMANDS',
            '# ========================================',
            ''
        );
    }

    generateMonitoringCommands() {
        this.scriptContent.push(
            '# Perintah untuk monitoring isolir:',
            '',
            '# Cek address list blocked customers:',
            '# /ip firewall address-list print where list=blocked_customers',
            '',
            '# Cek firewall rules:',
            '# /ip firewall filter print where comment~"Block suspended customers"',
            '',
            '# Cek DHCP leases yang diblokir:',
            '# /ip dhcp-server lease print where blocked=yes',
            '',
            '# Cek queue suspended:',
            '# /queue simple print where name~"suspended"',
            '',
            '# ========================================',
            '# 6. MANUAL ISOLATION COMMANDS',
            '# ========================================',
            ''
        );
    }

    generateManualCommands() {
        this.scriptContent.push(
            '# Perintah manual untuk isolir pelanggan:',
            '',
            '# Isolir pelanggan (ganti IP_ADDRESS dengan IP pelanggan):',
            '# /ip firewall address-list add list=blocked_customers address=IP_ADDRESS comment="SUSPENDED - [ALASAN] - [TANGGAL]"',
            '',
            '# Contoh:',
            '# /ip firewall address-list add list=blocked_customers address=192.168.1.100 comment="SUSPENDED - Telat bayar - 2024-01-15"',
            '',
            '# Restore pelanggan (hapus dari address list):',
            '# /ip firewall address-list remove [find where address=IP_ADDRESS and list=blocked_customers]',
            '',
            '# Contoh:',
            '# /ip firewall address-list remove [find where address=192.168.1.100 and list=blocked_customers]',
            '',
            '# ========================================',
            '# 7. BULK OPERATIONS',
            '# ========================================',
            ''
        );
    }

    generateBulkOperations() {
        this.scriptContent.push(
            '# Operasi bulk untuk multiple pelanggan:',
            '',
            '# Isolir multiple IP sekaligus:',
            '# :foreach i in={192.168.1.100;192.168.1.101;192.168.1.102} do={/ip firewall address-list add list=blocked_customers address=$i comment="BULK SUSPEND - [TANGGAL]"}',
            '',
            '# Restore semua pelanggan yang diisolir:',
            '# /ip firewall address-list remove [find where list=blocked_customers and comment~"SUSPENDED"]',
            '',
            '# ========================================',
            '# 8. ADVANCED CONFIGURATION',
            '# ========================================',
            ''
        );
    }

    generateAdvancedConfiguration() {
        this.scriptContent.push(
            '# Konfigurasi lanjutan untuk performa optimal:',
            '',
            '# Buat address list terpisah untuk monitoring:',
            '# /ip firewall address-list add list=monitoring_customers address=0.0.0.0 comment="For monitoring purposes"',
            '',
            '# Buat rule untuk logging (optional):',
            '# /ip firewall filter add chain=forward src-address-list=blocked_customers action=log log-prefix="BLOCKED:" comment="Log blocked customers"',
            '',
            '# Buat rule untuk allow specific services (jika diperlukan):',
            '# /ip firewall filter add chain=forward src-address-list=blocked_customers dst-port=53 action=accept comment="Allow DNS for blocked customers"',
            '',
            '# ========================================',
            '# 9. TROUBLESHOOTING',
            '# ========================================',
            ''
        );
    }

    generateTroubleshooting() {
        this.scriptContent.push(
            '# Troubleshooting commands:',
            '',
            '# Cek apakah rule firewall aktif:',
            '# /ip firewall filter print where disabled=no and comment~"Block suspended customers"',
            '',
            '# Cek address list entries:',
            '# /ip firewall address-list print where list=blocked_customers',
            '',
            '# Test connectivity dari IP yang diisolir:',
            '# /ping 8.8.8.8 src-address=IP_YANG_DIISOLIR',
            '',
            '# Cek log firewall:',
            '# /log print where topics~"firewall"',
            '',
            '# ========================================',
            '# END OF SCRIPT',
            '# ========================================',
            '',
            '# Catatan:',
            '# 1. Pastikan script ini dijalankan dengan akses admin penuh',
            '# 2. Sesuaikan IP range dengan konfigurasi network Anda',
            '# 3. Test konfigurasi di environment non-production terlebih dahulu',
            '# 4. Backup konfigurasi Mikrotik sebelum menjalankan script',
            '# 5. Monitor log setelah implementasi untuk memastikan berfungsi dengan baik',
            ''
        );
    }

    generateScript() {
        this.generateAddressListSetup();
        this.generateFirewallRules();
        this.generateDHCPConfiguration();
        this.generateQueueConfiguration();
        this.generateMonitoringCommands();
        this.generateManualCommands();
        this.generateBulkOperations();
        this.generateAdvancedConfiguration();
        this.generateTroubleshooting();
        
        return this.scriptContent.join('\n');
    }

    saveScript(filename = 'mikrotik-isolation-setup.rsc') {
        const script = this.generateScript();
        const filepath = path.join(__dirname, '..', filename);
        
        fs.writeFileSync(filepath, script, 'utf8');
        console.log(`✅ Script Mikrotik berhasil dibuat: ${filepath}`);
        return filepath;
    }

    printScript() {
        const script = this.generateScript();
        console.log('\n' + '='.repeat(60));
        console.log('MIKROTIK ISOLATION SCRIPT');
        console.log('='.repeat(60));
        console.log(script);
        console.log('='.repeat(60));
    }
}

// Fungsi untuk generate script berdasarkan setting aplikasi
function generateScriptFromSettings() {
    const generator = new MikrotikIsolationScriptGenerator();
    
    // Ambil setting dari aplikasi
    const suspensionMethod = getSetting('static_ip_suspension_method', 'address_list');
    const bandwidthLimit = getSetting('suspension_bandwidth_limit', '1k/1k');
    const isolirProfile = getSetting('isolir_profile', 'isolir');
    
    console.log('🔧 Konfigurasi Aplikasi:');
    console.log(`   Metode Isolir: ${suspensionMethod}`);
    console.log(`   Bandwidth Limit: ${bandwidthLimit}`);
    console.log(`   Isolir Profile: ${isolirProfile}`);
    console.log('');
    
    return generator;
}

// Main execution
if (require.main === module) {
    try {
        console.log('🚀 Generating Mikrotik Isolation Script...\n');
        
        const generator = generateScriptFromSettings();
        const filepath = generator.saveScript();
        
        console.log('\n📋 Script berhasil dibuat!');
        console.log(`   File: ${filepath}`);
        console.log('\n📖 Cara menggunakan:');
        console.log('   1. Copy isi file script ke clipboard');
        console.log('   2. Login ke Mikrotik RouterOS');
        console.log('   3. Paste script di terminal Mikrotik');
        console.log('   4. Atau upload file .rsc ke Mikrotik');
        console.log('\n⚠️  Pastikan backup konfigurasi Mikrotik terlebih dahulu!');
        
        // Tampilkan preview script
        console.log('\n📄 Preview Script:');
        generator.printScript();
        
    } catch (error) {
        console.error('❌ Error generating script:', error.message);
        process.exit(1);
    }
}

module.exports = MikrotikIsolationScriptGenerator;
