<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Input Pembayaran - <%= appSettings.companyHeader %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background: #f5f6fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            padding-bottom: 70px; /* Space for bottom navigation */
        }
        
        .navbar {
            background: white;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 1rem 0;
        }
        
        .navbar-brand {
            font-weight: 600;
            color: #28a745;
        }
        
        .logout-btn {
            background: #dc3545;
            border: none;
            border-radius: 8px;
            padding: 0.5rem 1rem;
            color: white;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .logout-btn:hover {
            background: #c82333;
            transform: translateY(-2px);
        }
        
        .payment-form {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
            margin-bottom: 2rem;
        }
        
        .form-label {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }
        
        .form-control, .form-select {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 0.75rem 1rem;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: #28a745;
            box-shadow: 0 0 0 0.2rem rgba(40,167,69,0.25);
            outline: none;
        }
        
        .btn-submit {
            background: linear-gradient(135deg, #28a745, #1e7e34);
            border: none;
            border-radius: 10px;
            padding: 0.75rem 2rem;
            font-weight: 600;
            color: white;
            width: 100%;
            transition: all 0.3s ease;
        }
        
        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(40,167,69,0.4);
        }
        
        .customer-card {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border-left: 4px solid #28a745;
        }
        
        .invoice-item {
            background: white;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 0.5rem;
            border: 1px solid #e9ecef;
            transition: all 0.3s ease;
        }
        
        .invoice-item:hover {
            border-color: #28a745;
            box-shadow: 0 2px 8px rgba(40,167,69,0.1);
        }
        
        .invoice-checkbox {
            margin-right: 0.75rem;
        }
        
        .commission-info {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 10px;
            padding: 1.5rem;
            margin-top: 1.5rem;
        }
        
        .commission-value {
            font-size: 1.5rem;
            font-weight: 700;
            color: #856404;
        }
        
        .alert {
            border-radius: 10px;
            border: none;
            margin-bottom: 1rem;
        }
        
        .loading {
            display: none;
        }
        
        .loading.show {
            display: block;
        }
        
        .spinner-border-sm {
            width: 1rem;
            height: 1rem;
        }
        
        /* Mobile Responsive */
        @media (max-width: 768px) {
            .payment-form {
                padding: 1.5rem;
                margin: 0 0.5rem 2rem;
            }
            
            .form-row {
                flex-direction: column;
            }
            
            .form-col {
                width: 100%;
                margin-bottom: 1rem;
            }
            
            .form-col:last-child {
                margin-bottom: 0;
            }
            
            .navbar {
                padding: 0.75rem 0;
            }
            
            .navbar-brand {
                font-size: 1.1rem;
            }
            
            .logout-btn {
                padding: 0.4rem 0.8rem;
                font-size: 0.9rem;
            }
            
            .btn-group {
                flex-direction: column;
            }
            
            .btn {
                width: 100%;
                margin-bottom: 0.5rem;
            }
            
            .btn:last-child {
                margin-bottom: 0;
            }
            
            .invoice-item {
                padding: 1rem;
            }
            
            .invoice-info {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .invoice-amount {
                margin-top: 0.5rem;
            }
        }
        
        @media (max-width: 480px) {
            .payment-form {
                padding: 1rem;
            }
            
            .form-label {
                font-size: 0.9rem;
            }
            
            .form-control {
                padding: 0.6rem 0.8rem;
                font-size: 0.9rem;
            }
            
            .btn {
                padding: 0.6rem 1rem;
                font-size: 0.9rem;
            }
        }
        
        .back-btn {
            background: #6c757d;
            border: none;
            border-radius: 8px;
            padding: 0.5rem 1rem;
            color: white;
            font-weight: 500;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }
        
        .back-btn:hover {
            background: #5a6268;
            transform: translateY(-2px);
            color: white;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <div class="navbar-brand">
                    <i class="bi bi-person-check me-2"></i>Tukang Tagih
                </div>
                <div>
                    <span class="me-3">Selamat datang, <%= collector.name %></span>
                </div>
            </div>
        </div>
    </nav>

    <div class="container">
        <div class="row">
            <div class="col-md-8 mx-auto">
                <!-- Header -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2><i class="bi bi-credit-card me-2"></i>Input Pembayaran</h2>
                </div>

                <!-- Payment Form -->
                <div class="payment-form">
                    <!-- Alert Messages -->
                    <div id="alertContainer"></div>
                    
                    <form id="paymentForm">
                        <!-- Customer Selection -->
                        <div class="mb-3">
                            <label for="customerId" class="form-label">
                                <i class="bi bi-person me-2"></i>Pilih Pelanggan
                            </label>
                            <div class="mb-2">
                                <input type="text" class="form-control" id="customerSearch" placeholder="Cari pelanggan (nama/telepon/username)">
                                <div id="customerSuggestions" class="list-group mt-1" style="max-height: 220px; overflow-y: auto;"></div>
                            </div>
                            <select class="form-select" id="customerId" name="customer_id" required>
                                <option value="">Pilih Pelanggan</option>
                                <% if (customers && customers.length > 0) { %>
                                    <% customers.forEach(function(customer) { %>
                                        <option value="<%= customer.id %>">
                                            <%= customer.name %> - <%= customer.phone %>
                                        </option>
                                    <% }); %>
                                <% } %>
                            </select>
                        </div>

                        <!-- Customer Info Card -->
                        <div id="customerInfo" class="customer-card" style="display: none;">
                            <h6 class="mb-2">Informasi Pelanggan</h6>
                            <div class="row">
                                <div class="col-md-6">
                                    <small class="text-muted">Nama:</small>
                                    <div id="customerName">-</div>
                                </div>
                                <div class="col-md-6">
                                    <small class="text-muted">Telepon:</small>
                                    <div id="customerPhone">-</div>
                                </div>
                            </div>
                        </div>

                        <!-- Invoices List -->
                        <div id="invoicesList" style="display: none;">
                            <label class="form-label">
                                <i class="bi bi-receipt me-2"></i>Tagihan yang Dibayar
                            </label>
                            <div id="invoicesContainer">
                                <!-- Invoices will be loaded here -->
                            </div>
                        </div>

                        <!-- Payment Amount -->
                        <div class="mb-3">
                            <label for="paymentAmount" class="form-label">
                                <i class="bi bi-currency-dollar me-2"></i>Jumlah Pembayaran
                            </label>
                            <input type="number" class="form-control" id="paymentAmount" name="payment_amount" 
                                   placeholder="Masukkan jumlah pembayaran" required>
                        </div>

                        <!-- Payment Method -->
                        <div class="mb-3">
                            <label for="paymentMethod" class="form-label">
                                <i class="bi bi-credit-card me-2"></i>Metode Pembayaran
                            </label>
                            <select class="form-select" id="paymentMethod" name="payment_method" required>
                                <option value="cash">Tunai</option>
                                <option value="transfer">Transfer Bank</option>
                                <option value="other">Lainnya</option>
                            </select>
                        </div>

                        <!-- Notes -->
                        <div class="mb-3">
                            <label for="notes" class="form-label">
                                <i class="bi bi-chat-text me-2"></i>Catatan
                            </label>
                            <textarea class="form-control" id="notes" name="notes" rows="3" 
                                      placeholder="Catatan tambahan (opsional)"></textarea>
                        </div>

                        <!-- Commission Info -->
                        <div id="commissionInfo" class="commission-info" style="display: none;">
                            <div class="d-flex justify-content-between align-items-center">
                                <span>Komisi Anda:</span>
                                <span class="commission-value" id="commissionAmount">Rp 0</span>
                            </div>
                        </div>

                        <!-- Submit Button -->
                        <button type="submit" class="btn btn-submit" id="submitBtn">
                            <span class="btn-text">
                                <i class="bi bi-check-circle me-2"></i>Simpan Pembayaran
                            </span>
                            <span class="loading">
                                <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                Memproses...
                            </span>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Bottom Navigation -->
    <%- include('../partials/collector-bottom-nav', { currentPage: 'payment' }) %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Customer data
        const customers = <%- JSON.stringify(customers || []) %>;
        const collector = <%- JSON.stringify(collector || {}) %>;

        // Initialize form
        document.addEventListener('DOMContentLoaded', function() {
            setupFormHandlers();
            // Preselect customer from URL if provided
            const params = new URLSearchParams(window.location.search);
            const preId = params.get('customer_id');
            if (preId) {
                const sel = document.getElementById('customerId');
                sel.value = preId;
                sel.dispatchEvent(new Event('change'));
            }
        });

        function setupFormHandlers() {
            // Customer search handler
            const customerSearch = document.getElementById('customerSearch');
            const customerSelect = document.getElementById('customerId');
            const suggestionBox = document.getElementById('customerSuggestions');

            function renderSuggestions(list) {
                suggestionBox.innerHTML = '';
                if (!list || list.length === 0) {
                    suggestionBox.style.display = 'none';
                    return;
                }
                list.slice(0, 20).forEach(c => {
                    const a = document.createElement('a');
                    a.href = 'javascript:void(0)';
                    a.className = 'list-group-item list-group-item-action';
                    a.innerHTML = `
                        <div class="d-flex w-100 justify-content-between">
                            <strong>${c.name}</strong>
                            <small>${c.username || ''}</small>
                        </div>
                        <div class="text-muted">${c.phone || '-'}</div>
                    `;
                    a.addEventListener('click', () => {
                        // set select value and trigger change
                        customerSelect.value = c.id;
                        suggestionBox.style.display = 'none';
                        customerSearch.value = `${c.name} ${c.phone ? '- ' + c.phone : ''}`;
                        customerSelect.dispatchEvent(new Event('change'));
                    });
                    suggestionBox.appendChild(a);
                });
                suggestionBox.style.display = 'block';
            }

            function filterCustomers(query) {
                if (!query) return customers;
                const q = query.toLowerCase();
                return customers.filter(c => {
                    const name = String(c.name || '').toLowerCase();
                    const phone = String(c.phone || '').toLowerCase();
                    const username = String(c.username || '').toLowerCase();
                    return name.includes(q) || phone.includes(q) || username.includes(q);
                });
            }

            customerSearch.addEventListener('input', function() {
                const query = this.value.trim();
                const filtered = filterCustomers(query);
                renderSuggestions(filtered);
            });

            // Hide suggestions when selecting from dropdown directly
            customerSelect.addEventListener('change', function() {
                suggestionBox.style.display = 'none';
            });

            // Hide suggestions on outside click
            document.addEventListener('click', function(e) {
                if (!suggestionBox.contains(e.target) && e.target !== customerSearch) {
                    suggestionBox.style.display = 'none';
                }
            });

            // Customer selection handler
            document.getElementById('customerId').addEventListener('change', function() {
                const customerId = this.value;
                if (customerId) {
                    const customer = customers.find(c => c.id == customerId);
                    if (customer) {
                        showCustomerInfo(customer);
                        loadCustomerInvoices(customerId);
                    }
                } else {
                    hideCustomerInfo();
                }
            });

            // Payment amount handler
            document.getElementById('paymentAmount').addEventListener('input', function() {
                calculateCommission();
            });

            // Form submission
            document.getElementById('paymentForm').addEventListener('submit', function(e) {
                e.preventDefault();
                submitPayment();
            });
        }

        function showCustomerInfo(customer) {
            document.getElementById('customerName').textContent = customer.name;
            document.getElementById('customerPhone').textContent = customer.phone;
            document.getElementById('customerInfo').style.display = 'block';
        }

        function hideCustomerInfo() {
            document.getElementById('customerInfo').style.display = 'none';
            document.getElementById('invoicesList').style.display = 'none';
        }

        async function loadCustomerInvoices(customerId) {
            try {
                const response = await fetch(`/collector/api/customer-invoices/${customerId}`);
                const result = await response.json();
                
                if (result.success) {
                    displayInvoices(result.data);
                }
            } catch (error) {
                console.error('Error loading invoices:', error);
            }
        }

        function displayInvoices(invoices) {
            const container = document.getElementById('invoicesContainer');
            container.innerHTML = '';

            if (invoices.length === 0) {
                container.innerHTML = '<div class="text-center text-muted py-3">Tidak ada tagihan</div>';
                return;
            }

            invoices.forEach(invoice => {
                const invoiceItem = document.createElement('div');
                invoiceItem.className = 'invoice-item';
                invoiceItem.innerHTML = `
                    <div class="form-check">
                        <input class="form-check-input invoice-checkbox" type="checkbox" 
                               value="${invoice.id}" id="invoice_${invoice.id}" data-amount="${Number(invoice.amount || 0)}" ${invoice.status !== 'paid' ? 'checked' : ''}>
                        <label class="form-check-label" for="invoice_${invoice.id}">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <strong>${invoice.invoice_number || 'INV-' + invoice.id}</strong>
                                    <br>
                                    <small class="text-muted">${invoice.package_name || 'Paket tidak tersedia'}</small>
                                </div>
                                <div class="text-end">
                                    <strong>Rp ${parseFloat(invoice.amount || 0).toLocaleString('id-ID')}</strong>
                                    <br>
                                    <span class="badge bg-${invoice.status === 'paid' ? 'success' : 'warning'}">
                                        ${invoice.status === 'paid' ? 'Lunas' : 'Belum Bayar'}
                                    </span>
                                </div>
                            </div>
                        </label>
                    </div>
                `;
                container.appendChild(invoiceItem);
            });

            document.getElementById('invoicesList').style.display = 'block';

            // Attach change listeners and prefill payment amount based on selected invoices
            document.querySelectorAll('.invoice-checkbox').forEach(cb => {
                cb.addEventListener('change', updatePaymentAmountFromSelection);
            });
            // Initial fill based on default-checked items
            updatePaymentAmountFromSelection();
        }

        function updatePaymentAmountFromSelection() {
            const selected = Array.from(document.querySelectorAll('.invoice-checkbox:checked'));
            const total = selected.reduce((sum, cb) => sum + (Number(cb.getAttribute('data-amount')) || 0), 0);
            const amountInput = document.getElementById('paymentAmount');
            amountInput.value = total > 0 ? total : '';
            calculateCommission();
        }

        function calculateCommission() {
            const paymentAmount = parseFloat(document.getElementById('paymentAmount').value) || 0;
            const commissionRate = collector.commission_rate || 5;
            const commission = (paymentAmount * commissionRate) / 100;
            
            document.getElementById('commissionAmount').textContent = 
                'Rp ' + commission.toLocaleString('id-ID');
            document.getElementById('commissionInfo').style.display = 'block';
        }

        async function submitPayment() {
            const form = document.getElementById('paymentForm');
            const formData = new FormData(form);
            
            // Get selected invoices
            const selectedInvoices = Array.from(document.querySelectorAll('.invoice-checkbox:checked'))
                .map(cb => cb.value);
            
            const paymentData = {
                customer_id: formData.get('customer_id'),
                payment_amount: parseFloat(formData.get('payment_amount')),
                payment_method: formData.get('payment_method'),
                notes: formData.get('notes'),
                invoice_ids: selectedInvoices
            };

            const submitBtn = document.getElementById('submitBtn');
            const btnText = submitBtn.querySelector('.btn-text');
            const loading = submitBtn.querySelector('.loading');

            // Show loading state
            btnText.style.display = 'none';
            loading.classList.add('show');
            submitBtn.disabled = true;

            try {
                const response = await fetch('/collector/api/payment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || ''
                    },
                    body: JSON.stringify(paymentData)
                });

                const result = await response.json();

                if (result.success) {
                    showAlert('success', 'Pembayaran berhasil disimpan!', 'Mengalihkan ke dashboard...');
                    setTimeout(() => {
                        window.location.href = '/collector/dashboard';
                    }, 1500);
                } else {
                    showAlert('danger', 'Error!', result.message || 'Gagal menyimpan pembayaran');
                }
            } catch (error) {
                console.error('Error submitting payment:', error);
                showAlert('danger', 'Error!', 'Terjadi kesalahan jaringan. Silakan coba lagi.');
            } finally {
                // Hide loading state
                btnText.style.display = 'inline';
                loading.classList.remove('show');
                submitBtn.disabled = false;
            }
        }

        function showAlert(type, title, message) {
            const alertContainer = document.getElementById('alertContainer');
            const alertId = 'alert-' + Date.now();
            
            const alertHTML = `
                <div id="${alertId}" class="alert alert-${type} alert-dismissible fade show" role="alert">
                    <strong>${title}</strong> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
            
            alertContainer.innerHTML = alertHTML;
            
            // Auto dismiss after 5 seconds
            setTimeout(() => {
                const alert = document.getElementById(alertId);
                if (alert) {
                    alert.remove();
                }
            }, 5000);
        }

        function logout() {
            if (confirm('Apakah Anda yakin ingin logout?')) {
                window.location.href = '/collector/logout';
            }
        }
    </script>
</body>
</html>
