<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Login Teknisi - <%= typeof settings !== 'undefined' && settings.company_header ? settings.company_header : 'GEMBOK' %></title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
    
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .login-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
            max-width: 450px;
            width: 100%;
            margin: 20px;
        }
        
        .login-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem;
            text-align: center;
        }
        
        .login-header h2 {
            margin: 0;
            font-weight: 600;
            font-size: 1.8rem;
        }
        
        .login-header p {
            margin: 0.5rem 0 0 0;
            opacity: 0.9;
            font-size: 0.95rem;
        }
        
        .login-body {
            padding: 2rem;
        }
        
        .form-floating {
            margin-bottom: 1rem;
        }
        
        .form-control {
            border-radius: 10px;
            border: 2px solid #e9ecef;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
        }
        
        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 10px;
            padding: 0.75rem 2rem;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s ease;
            width: 100%;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }
        
        .btn-secondary {
            background: #6c757d;
            border: none;
            border-radius: 10px;
            padding: 0.75rem 2rem;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s ease;
            width: 100%;
        }
        
        .alert {
            border-radius: 10px;
            border: none;
            padding: 1rem;
            margin-bottom: 1rem;
        }
        
        .otp-input-group {
            display: flex;
            gap: 0.5rem;
            justify-content: center;
            margin: 1rem 0;
        }
        
        .otp-input {
            width: 50px;
            height: 50px;
            text-align: center;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 1.2rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .otp-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
            outline: none;
        }
        
        .step {
            display: none;
        }
        
        .step.active {
            display: block;
        }
        
        .company-logo {
            width: 80px;
            height: 80px;
            background: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
            font-size: 2rem;
            color: #667eea;
            font-weight: bold;
        }
        
        .back-link {
            color: #667eea;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 1rem;
            font-weight: 500;
        }
        
        .back-link:hover {
            color: #764ba2;
        }
        
        .resend-otp {
            text-align: center;
            margin-top: 1rem;
        }
        
        .resend-otp button {
            background: none;
            border: none;
            color: #667eea;
            text-decoration: underline;
            cursor: pointer;
        }
        
        .resend-otp button:hover {
            color: #764ba2;
        }
        
        .resend-otp button:disabled {
            color: #6c757d;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12">
                <div class="login-container mx-auto">
                    <!-- Header -->
                    <div class="login-header">
                        <div class="company-logo">
                            <%= typeof settings !== 'undefined' && settings.company_header ? settings.company_header.charAt(0) : 'G' %>
                        </div>
                        <h2>Portal Teknisi</h2>
                        <p>Login untuk mengakses dashboard teknisi</p>
                    </div>
                    
                    <!-- Body -->
                    <div class="login-body">
                        <!-- Error/Success Messages -->
                        <% if (typeof error !== 'undefined' && error) { %>
                            <div class="alert alert-danger">
                                <i class="bi bi-exclamation-triangle me-2"></i>
                                <%= error %>
                            </div>
                        <% } %>
                        
                        <% if (typeof success !== 'undefined' && success) { %>
                            <div class="alert alert-success">
                                <i class="bi bi-check-circle me-2"></i>
                                <%= success %>
                            </div>
                        <% } %>
                        
                        <!-- Step 1: Phone Input -->
                        <div class="step <%= typeof step !== 'undefined' && step === 'phone' ? 'active' : '' %>" id="phoneStep">
                            <form method="POST" action="/technician/request-otp" id="phoneForm">
                                <div class="form-floating">
                                    <input type="tel" class="form-control" id="phone" name="phone" 
                                           placeholder="Nomor Telepon" required 
                                           value="<%= typeof phone !== 'undefined' && phone ? phone : '' %>"
                                           pattern="[0-9+\-\s()]+">
                                    <label for="phone">
                                        <i class="bi bi-telephone me-2"></i>Nomor Telepon
                                    </label>
                                </div>
                                
                                <div class="form-text mb-3">
                                    <i class="bi bi-info-circle me-1"></i>
                                    Masukkan nomor telepon yang terdaftar sebagai teknisi
                                </div>
                                
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-arrow-right me-2"></i>Lanjutkan
                                </button>
                            </form>
                        </div>
                        
                        <!-- Step 2: OTP Verification -->
                        <div class="step <%= typeof step !== 'undefined' && step === 'otp' ? 'active' : '' %>" id="otpStep">
                            <a href="/technician/login" class="back-link">
                                <i class="bi bi-arrow-left"></i>
                                Kembali ke input nomor telepon
                            </a>
                            
                            <h5 class="text-center mb-3">Verifikasi OTP</h5>
                            <p class="text-center text-muted mb-4">
                                Kode OTP telah dikirim ke <strong><%= typeof phone !== 'undefined' && phone ? phone : '' %></strong>
                            </p>
                            
                            <form method="POST" action="/technician/verify-otp" id="otpForm">
                                <div class="otp-input-group">
                                    <% for (let i = 0; i < (typeof settings !== 'undefined' && settings.otp_length ? parseInt(settings.otp_length) : 6); i++) { %>
                                        <input type="text" class="otp-input" 
                                               maxlength="1" 
                                               data-index="<%= i %>"
                                               inputmode="numeric"
                                               pattern="[0-9]">
                                    <% } %>
                                </div>
                                
                                <input type="hidden" name="otp_code" id="otpCode">
                                
                                <div class="form-text text-center mb-3">
                                    <i class="bi bi-clock me-1"></i>
                                    OTP berlaku selama <%= typeof settings !== 'undefined' && settings.otp_expiry_minutes ? settings.otp_expiry_minutes : 5 %> menit
                                </div>
                                
                                <button type="submit" class="btn btn-primary" id="verifyBtn" disabled>
                                    <i class="bi bi-check-circle me-2"></i>Verifikasi & Login
                                </button>
                            </form>
                            
                            <div class="resend-otp">
                                <button type="button" id="resendBtn" onclick="resendOTP()">
                                    Kirim ulang OTP
                                </button>
                                <div class="mt-2">
                                    <small class="text-muted" id="countdown"></small>
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // OTP Input Handling
        const otpInputs = document.querySelectorAll('.otp-input');
        const otpCodeInput = document.getElementById('otpCode');
        const verifyBtn = document.getElementById('verifyBtn');
        const resendBtn = document.getElementById('resendBtn');
        const countdownEl = document.getElementById('countdown');
        
        let countdownInterval;
        let countdownTime = <%= typeof settings !== 'undefined' && settings.otp_expiry_minutes ? parseInt(settings.otp_expiry_minutes) * 60 : 300 %>;
        
        // Auto-focus next input
        otpInputs.forEach((input, index) => {
            input.addEventListener('input', function(e) {
                const value = e.target.value;
                
                // Only allow numbers
                if (!/^\d$/.test(value)) {
                    e.target.value = '';
                    return;
                }
                
                // Move to next input
                if (value && index < otpInputs.length - 1) {
                    otpInputs[index + 1].focus();
                }
                
                updateOTPCode();
            });
            
            input.addEventListener('keydown', function(e) {
                // Handle backspace
                if (e.key === 'Backspace' && !e.target.value && index > 0) {
                    otpInputs[index - 1].focus();
                }
            });
            
            input.addEventListener('paste', function(e) {
                e.preventDefault();
                const pastedData = e.clipboardData.getData('text');
                const numbers = pastedData.replace(/\D/g, '').slice(0, otpInputs.length);
                
                numbers.split('').forEach((num, i) => {
                    if (otpInputs[i]) {
                        otpInputs[i].value = num;
                    }
                });
                
                updateOTPCode();
                otpInputs[otpInputs.length - 1].focus();
            });
        });
        
        function updateOTPCode() {
            const code = Array.from(otpInputs).map(input => input.value).join('');
            otpCodeInput.value = code;
            verifyBtn.disabled = code.length !== otpInputs.length;
        }
        
        // Start countdown
        function startCountdown() {
            resendBtn.disabled = true;
            countdownTime = <%= typeof settings !== 'undefined' && settings.otp_expiry_minutes ? parseInt(settings.otp_expiry_minutes) * 60 : 300 %>;
            
            countdownInterval = setInterval(() => {
                const minutes = Math.floor(countdownTime / 60);
                const seconds = countdownTime % 60;
                
                countdownEl.textContent = `Kirim ulang dalam ${minutes}:${seconds.toString().padStart(2, '0')}`;
                
                if (countdownTime <= 0) {
                    clearInterval(countdownInterval);
                    resendBtn.disabled = false;
                    countdownEl.textContent = '';
                }
                
                countdownTime--;
            }, 1000);
        }
        
        // Resend OTP
        function resendOTP() {
            const phone = '<%= typeof phone !== 'undefined' && phone ? phone : '' %>';
            if (!phone) return;
            
            fetch('/technician/request-otp', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ phone: phone })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Clear OTP inputs
                    otpInputs.forEach(input => input.value = '');
                    updateOTPCode();
                    
                    // Show success message
                    showMessage('OTP berhasil dikirim ulang', 'success');
                    
                    // Restart countdown
                    startCountdown();
                } else {
                    showMessage(data.message || 'Gagal mengirim ulang OTP', 'error');
                }
            })
            .catch(error => {
                showMessage('Terjadi kesalahan sistem', 'error');
                console.error('Error:', error);
            });
        }
        
        // Show message
        function showMessage(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type === 'error' ? 'danger' : 'success'}`;
            alertDiv.innerHTML = `
                <i class="bi bi-${type === 'error' ? 'exclamation-triangle' : 'check-circle'} me-2"></i>
                ${message}
            `;
            
            const loginBody = document.querySelector('.login-body');
            loginBody.insertBefore(alertDiv, loginBody.firstChild);
            
            setTimeout(() => {
                alertDiv.remove();
            }, 5000);
        }
        
        // Phone number formatting
        const phoneInput = document.getElementById('phone');
        if (phoneInput) {
            phoneInput.addEventListener('input', function(e) {
                let value = e.target.value.replace(/\D/g, '');
                
                if (value.startsWith('0')) {
                    value = '62' + value.slice(1);
                } else if (!value.startsWith('62')) {
                    value = '62' + value;
                }
                
                // Format display
                let displayValue = value;
                if (value.startsWith('62')) {
                    displayValue = '0' + value.slice(2);
                }
                
                e.target.value = displayValue;
            });
        }
        
        // Start countdown if on OTP step
        if (document.getElementById('otpStep').classList.contains('active')) {
            startCountdown();
        }
        
        // Form validation
        document.getElementById('phoneForm')?.addEventListener('submit', function(e) {
            const phone = phoneInput.value.replace(/\D/g, '');
            if (phone.length < 10) {
                e.preventDefault();
                showMessage('Nomor telepon harus minimal 10 digit', 'error');
                return false;
            }
        });
    </script>
</body>
</html>